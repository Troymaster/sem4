unit Unit3;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Grids;

type
  TForm3 = class(TForm)
    Строки: TLabel;
    Столбцы: TLabel;
    Label3: TLabel;
    Вывод: TLabel;
    Label2: TLabel;
    Label1: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    SG1: TStringGrid;
    Edit1: TEdit;
    Button1: TButton;
    Edit2: TEdit;
    Edit3: TEdit;
    Edit4: TEdit;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure Edit1Change(Sender: TObject);
    procedure Edit2Change(Sender: TObject);
    procedure Edit3Change(Sender: TObject);
    procedure Edit4Change(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form3: TForm3;
  S, P, O, a, b, j, i, n: integer;

implementation
Uses Unit2, Unit4;
{$R *.dfm}

procedure TForm3.Button1Click(Sender: TObject);
begin
  n:=0;
	if (Edit3.Text = '') or (Edit3.Text = '-') then
  begin
		Edit3.Text := '0'; a:=0;
  end;
	if (Edit4.Text = '') or (Edit4.Text = '-') then
  begin
		Edit4.Text := '0'; b:=0;
  end;
	if (b < a) then
  Label2.Caption := 'Ошибка, "B" должно быть больше или равно "A"!'
	else begin
		P := 0; O := 0;
		for j:= 1 to SG1.ColCount-1 do
    begin
			S := 0;
			for i := 1 to SG1.RowCount-1 do
      begin
				if (SG1.Cells[j, i] = '') or (SG1.Cells[j, i] = '-') then
					SG1.Cells[j, i] := '0';
				S := S + StrToInt(SG1.Cells[j, i]);
      end;
			if (S >= a) and (S <= b) then
      begin
        n:=n+1;
				SG1.Cells[n, 0] := IntToStr(j);
      end;
    end;
		if (n = 0) then
			Label2.Caption:='Нет столбцов, сумма элементов в которых' + #13#10 + 'находится в заданном диапозоне.'
		else
		Begin
			Label2.Caption:='В ' + SG1.Cells[1, 0];
			for i:= 2 to n do
			begin
				Label2.Caption := Label2.Caption + ' ,' + SG1.Cells[i, 0];
			end;
			if (n = 1) then Label2.Caption := Label2.Caption + ' столбце'
			else Label2.Caption := Label2.Caption + ' столбцах';
			Label2.Caption := Label2.Caption + #13#10 +  'сумма элементов находится в заданном диапозоне.';
		end;
    for i:=1 to SG1.ColCount-1 do
		  SG1.Cells[i, 0] := IntToStr(i);
		if (l = true) then
		begin
		  for j := 1 to SG1.ColCount-1 do
      begin
			for i:= 1 to SG1.RowCount-1 do
        begin
				  if (StrToInt(SG1.Cells[j, i])>=0) then P:=P+1
				  else O:=O+1;
        end;
      end;
			if (P>O) then Label2.Caption := Label2.Caption + #13#10 + 'В заданом массиве больше половины положительных элементов.'
			else Label2.Caption := Label2.Caption + #13#10 + 'В заданом массиве не больше половины положительных элементов.';
		end;
	end;
end;

procedure TForm3.Edit1Change(Sender: TObject);
begin
	if (Edit1.Text = '0') then
		Edit1.Text := '1';
	if (Edit1.Text <> '') then
	begin
		n := StrToInt(Edit1.Text);
		SG1.RowCount := n + 1;
		for i := 1 to SG1.RowCount do
    begin
			SG1.Cells[0, i] := IntToStr(i);
    end;
	end;
end;

procedure TForm3.Edit2Change(Sender: TObject);
begin
	if (Edit2.Text = '0') then
		Edit2.Text := '1';
	if (Edit2.Text <> '') then
	begin
		n := StrToInt(Edit2.Text);
		SG1.ColCount := n + 1;
		for i := 1 to SG1.ColCount do
    begin
			SG1.Cells[i, 0] := IntToStr(i);
    end;
	end;
end;

procedure TForm3.Edit3Change(Sender: TObject);
begin
  if (Edit3.Text <> '') and (Edit3.Text <> '-') then
		a := StrToInt(Edit3.Text);
end;

procedure TForm3.Edit4Change(Sender: TObject);
begin
  if (Edit4.Text <> '') and (Edit4.Text <> '-') then
		b := StrToInt(Edit4.Text);
end;

procedure TForm3.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Form2.Processing1.enabled:=true;
  action:=cafree;
end;

procedure TForm3.FormCreate(Sender: TObject);
begin
  a:=0; b:=10;
  Form3.Label1.Caption := 'Массив состоит из целых чисел. Определить номера столбцов,\nсумма элементов в которых находится в заданном диапозоне [a,b].\nВыполнить выбранные дополнительные задачи.';
	n := 2;
	SG1.ColCount := n+1;
	for i:=1 to SG1.ColCount-1 do
		SG1.Cells[i, 0] := IntToStr(i);
	SG1.RowCount := n + 1;
	for i:=1 to SG1.RowCount-1 do
    SG1.Cells[0, i] := IntToStr(i);
end;

End.
