//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "main.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"

using namespace std;

short const NMAX = 100;   //cols
short const MMAX = NMAX;  //rows
//StringGrid->Cells[col][row]

TForm_main *Form_main;
//---------------------------------------------------------------------------
__fastcall TForm_main::TForm_main(TComponent* Owner)
	: TForm(Owner)
{
	Form_main->StringGrid->RowCount=Form_main->Edit_rows->Text.ToInt()+1;
	Form_main->StringGrid->ColCount=Form_main->Edit_cols->Text.ToInt()+1;
	Form_main->StringGrid->Cells[0][0]="N/N";
	for (short i = 1; i <=Form_main->StringGrid->RowCount; i++)
			Form_main->StringGrid->Cells[0][i]=i;
	for (short i = 1; i <=Form_main->StringGrid->ColCount; i++)
			Form_main->StringGrid->Cells[i][0]=i;
}
//---------------------------------------------------------------------------
int F_apply_task(){
return -1;
}
//---------------------------------------------------------------------------
void __fastcall TForm_main::Button_applyClick(TObject *Sender)
{
	int answer = F_apply_task();
	if (answer) {
		Form_main->Label_answer->Caption="Sum of negative elements in even rows:";
		Form_main->Label_answer->Visible = true;
		Form_main->Edit_answer->Visible = true;
		Form_main->Edit_answer->Text = answer;
	}
	else {
		Form_main->Label_answer->Caption="Not all columns \ncontains negative numbers";
		Form_main->Label_answer->Visible = true;
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm_main::Form_main_Resize(TObject *Sender)
{
	Form_main->StringGrid->Height = Form_main->Height - (Form_main->GroupBox_Parameters->Top+GroupBox_Parameters->Height+78);
	Form_main->StringGrid->Width = Form_main->Width-32;
}
//---------------------------------------------------------------------------
void __fastcall TForm_main::Edit_rows_change(TObject *Sender)
{
	try {
		int rows = Form_main->Edit_rows->Text.ToInt()+1;
		if (rows>=2 && rows<=MMAX) Form_main->StringGrid->RowCount=rows;
		for (short i = 1; i <=rows; i++)
			Form_main->StringGrid->Cells[0][i]=i;
	} catch (Exception &EConvertError) {}
}
//---------------------------------------------------------------------------
void __fastcall TForm_main::Edit_cols_change(TObject *Sender)
{
	try {
		int cols = Form_main->Edit_cols->Text.ToInt()+1;
		if (cols>=2 && cols<=NMAX) Form_main->StringGrid->ColCount=cols;
		for (short i = 1; i <=cols; i++)
			Form_main->StringGrid->Cells[i][0]=i;
	} catch (Exception &EConvertError) {}
}
//---------------------------------------------------------------------------
void __fastcall TForm_main::Button_rand_matrixClick(TObject *Sender)
{
	try {
	int cols = StrToInt(Form_main->Edit_cols->Text);
	int rows = StrToInt(Form_main->Edit_rows->Text);
	for (short i = 1; i <=rows; i++)
		for (short j = 1; j <=cols; j++)
			Form_main->StringGrid->Cells[j][i]=rand()%101-50;
	} catch (Exception &EConvertError) {}
}
//---------------------------------------------------------------------------
void __fastcall TForm_main::Button_rand_sizeClick(TObject *Sender)
{
	int cols = rand()%NMAX+1;
	int rows = rand()%MMAX+1;
	Form_main->Edit_rows->Text=rows;
	Form_main->Edit_cols->Text=cols;
}
//---------------------------------------------------------------------------
void __fastcall TForm_main::StringGrid_KeyPress(TObject *Sender, System::WideChar &Key)
{
	 if (((Key < '0') || (Key > '9')) && Key != VK_BACK) Key=0;
}
//---------------------------------------------------------------------------

void __fastcall TForm_main::Button_clearClick(TObject *Sender)
{
for (short i = 1; i <=MMAX+1; i++)
		for (short j = 1; j <=NMAX+1; j++)
			Form_main->StringGrid->Cells[j][i]="";
}
//---------------------------------------------------------------------------

